"""
An√°lise de como o rob√¥ chegou a 81.2% de probabilidade para Ashley Lahey
"""

def analyze_probability_calculation():
    print("ü§ñ AN√ÅLISE: Como o rob√¥ calculou 81.2% para Ashley Lahey")
    print("=" * 60)
    
    # Dados das imagens
    print("üì± DADOS DAS IMAGENS:")
    print("üèÜ Torneio: W15 Logrono")
    print("‚öîÔ∏è Jogo: Ashley Lahey vs Alice Gillan")
    print("üí∞ Odds: Ashley 1.665 | Alice ~2.10")
    print("üéØ Probabilidade mostrada: 81.2%")
    print("üìÖ Data: 24/08 06:00")
    
    # M√©todo 1: Probabilidade impl√≠cita simples
    odd_ashley = 1.665
    prob_implicita = 1 / odd_ashley
    
    print(f"\nüî¢ M√âTODO 1 - Probabilidade Impl√≠cita Simples:")
    print(f"P = 1 / {odd_ashley} = {prob_implicita:.3f} = {prob_implicita * 100:.1f}%")
    print(f"‚ùå Resultado: {prob_implicita * 100:.1f}% ‚â† 81.2%")
    
    # M√©todo 2: Considerando odds de Alice
    odd_alice = 2.10
    prob_ashley_implicita = 1 / odd_ashley
    prob_alice_implicita = 1 / odd_alice
    
    print(f"\nüî¢ M√âTODO 2 - Probabilidades Impl√≠citas Ambas:")
    print(f"P(Ashley) = 1 / {odd_ashley} = {prob_ashley_implicita:.3f} = {prob_ashley_implicita * 100:.1f}%")
    print(f"P(Alice) = 1 / {odd_alice} = {prob_alice_implicita:.3f} = {prob_alice_implicita * 100:.1f}%")
    print(f"Soma = {(prob_ashley_implicita + prob_alice_implicita) * 100:.1f}%")
    print(f"‚ùå Ashley: {prob_ashley_implicita * 100:.1f}% ‚â† 81.2%")
    
    # M√©todo 3: Probabilidade "justa" (removendo margem da casa)
    soma_total = prob_ashley_implicita + prob_alice_implicita
    prob_ashley_justa = prob_ashley_implicita / soma_total
    prob_alice_justa = prob_alice_implicita / soma_total
    
    print(f"\nüî¢ M√âTODO 3 - Probabilidade 'Justa' (sem margem):")
    print(f"Soma das probabilidades: {soma_total:.3f}")
    print(f"P(Ashley) justa = {prob_ashley_implicita:.3f} / {soma_total:.3f} = {prob_ashley_justa:.3f} = {prob_ashley_justa * 100:.1f}%")
    print(f"P(Alice) justa = {prob_alice_implicita:.3f} / {soma_total:.3f} = {prob_alice_justa:.3f} = {prob_alice_justa * 100:.1f}%")
    print(f"‚ùå Ashley: {prob_ashley_justa * 100:.1f}% ‚â† 81.2%")
    
    # M√©todo 4: Tentativa reversa - que odd geraria 81.2%?
    prob_target = 0.812
    odd_necessaria = 1 / prob_target
    
    print(f"\nüî¢ M√âTODO 4 - An√°lise Reversa:")
    print(f"Para ter 81.2% de probabilidade, a odd deveria ser:")
    print(f"Odd = 1 / 0.812 = {odd_necessaria:.3f}")
    print(f"üéØ Mas a odd real √© {odd_ashley} (muito diferente)")
    
    # M√©todo 5: Poss√≠vel modelo de ML/algoritmo personalizado
    print(f"\nü§ñ M√âTODO 5 - Modelo de Machine Learning:")
    print(f"üß† O rob√¥ pode estar usando um modelo que considera:")
    print(f"   üìä Hist√≥rico dos jogadores")
    print(f"   üéæ Performance em surface similar")
    print(f"   üìà Forma atual")
    print(f"   üèÜ Estat√≠sticas do torneio")
    print(f"   ‚öñÔ∏è Head-to-head")
    print(f"   üå°Ô∏è Condi√ß√µes clim√°ticas")
    print(f"   üí™ Fatigue/descanso")
    
    # Poss√≠vel explica√ß√£o
    print(f"\nüí° HIP√ìTESES MAIS PROV√ÅVEIS:")
    print(f"1. üéØ Modelo propriet√°rio que analisa dados al√©m das odds")
    print(f"2. üìä Algoritmo que considera m√∫ltiplas fontes de dados")
    print(f"3. üßÆ C√°lculo baseado em performance hist√≥rica espec√≠fica")
    print(f"4. ‚ö†Ô∏è Erro no display (mostrou probabilidade de outro c√°lculo)")
    
    # An√°lise da discrep√¢ncia
    diferenca = abs(81.2 - prob_ashley_implicita * 100)
    print(f"\nüìà AN√ÅLISE DA DISCREP√ÇNCIA:")
    print(f"Diferen√ßa: {diferenca:.1f} pontos percentuais")
    print(f"Isso √© uma diferen√ßa MUITO significativa!")
    
    if diferenca > 20:
        print(f"üö® DIFEREN√áA EXTREMA: Indica modelo muito diferente das odds de mercado")
    elif diferenca > 10:
        print(f"‚ö†Ô∏è DIFEREN√áA ALTA: Modelo pode ter informa√ß√µes privilegiadas")
    else:
        print(f"‚úÖ DIFEREN√áA NORMAL: Dentro da varia√ß√£o esperada")

def test_possible_models():
    """Testa poss√≠veis modelos que poderiam gerar 81.2%"""
    print(f"\n" + "=" * 60)
    print("üß™ TESTANDO POSS√çVEIS MODELOS")
    print("=" * 60)
    
    # Cen√°rios poss√≠veis
    cenarios = [
        ("Ranking muito superior de Ashley", 0.812),
        ("Ashley especialista em clay court", 0.812),
        ("Alice com les√£o/fadiga", 0.812),
        ("Head-to-head muito favor√°vel", 0.812),
        ("Forma atual excepcional de Ashley", 0.812),
    ]
    
    odd_ashley = 1.665
    
    for descricao, prob_modelo in cenarios:
        # Calcula EV se apost√°ssemos em Ashley com esse modelo
        ev_ashley = prob_modelo * (odd_ashley - 1) - (1 - prob_modelo)
        
        print(f"üìä {descricao}")
        print(f"   Modelo: {prob_modelo * 100:.1f}% para Ashley")
        print(f"   EV apostando em Ashley @ {odd_ashley}: {ev_ashley * 100:+.1f}%")
        
        if ev_ashley > 0.15:  # 15%+
            print(f"   üö® EV EXTREMO - Aposta muito valiosa")
        elif ev_ashley > 0.05:  # 5%+
            print(f"   ‚úÖ OPORTUNIDADE - EV positivo alto")
        elif ev_ashley > 0:
            print(f"   üü° VALOR BAIXO - EV positivo pequeno")
        else:
            print(f"   ‚ùå SEM VALOR - EV negativo")
        print()

if __name__ == "__main__":
    analyze_probability_calculation()
    test_possible_models()
